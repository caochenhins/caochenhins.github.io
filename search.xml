<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JavaEE进阶知识学习-----MybatisPus核心知识学习总结]]></title>
    <url>%2F2019%2F03%2F21%2FJavaEE%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0-MybatisPus%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;MybatisPlus&#x7B80;&#x4ECB;1.1.&#x7B80;&#x4ECB;Mybatis-Plus&#xFF08;&#x7B80;&#x79F0;MP&#xFF09;&#x662F;&#x4E00;&#x4E2A; Mybatis &#x7684;&#x589E;&#x5F3A;&#x5DE5;&#x5177;&#xFF0C;&#x5728; Mybatis &#x7684;&#x57FA;&#x7840;&#x4E0A;&#x53EA;&#x505A;&#x589E;&#x5F3A;&#x4E0D;&#x505A;&#x6539;&#x53D8;&#xFF0C;&#x4E3A;&#x7B80;&#x5316;&#x5F00;&#x53D1;&#x3001;&#x63D0;&#x9AD8;&#x6548;&#x7387;&#x800C;&#x751F;&#x3002; 1.2.&#x6587;&#x6863;&#x5730;&#x5740;&#x5B98;&#x7F51;&#x6587;&#x6863;&#x5730;&#x5740; 1.3.MybatisPlus&#x7684;&#x7279;&#x6027; &#x65E0;&#x4FB5;&#x5165;&#xFF1A;Mybatis-Plus &#x5728; Mybatis &#x7684;&#x57FA;&#x7840;&#x4E0A;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#xFF0C;&#x53EA;&#x505A;&#x589E;&#x5F3A;&#x4E0D;&#x505A;&#x6539;&#x53D8;&#xFF0C;&#x5F15;&#x5165; Mybatis-Plus &#x4E0D;&#x4F1A;&#x5BF9;&#x60A8;&#x73B0;&#x6709;&#x7684; Mybatis &#x6784;&#x67B6;&#x4EA7;&#x751F;&#x4EFB;&#x4F55;&#x5F71;&#x54CD;&#xFF0C;&#x800C;&#x4E14; MP &#x652F;&#x6301;&#x6240;&#x6709; Mybatis &#x539F;&#x751F;&#x7684;&#x7279;&#x6027; &#x4F9D;&#x8D56;&#x5C11;&#xFF1A;&#x4EC5;&#x4EC5;&#x4F9D;&#x8D56; Mybatis &#x4EE5;&#x53CA; Mybatis-Spring &#x635F;&#x8017;&#x5C0F;&#xFF1A;&#x542F;&#x52A8;&#x5373;&#x4F1A;&#x81EA;&#x52A8;&#x6CE8;&#x5165;&#x57FA;&#x672C; CURD&#xFF0C;&#x6027;&#x80FD;&#x57FA;&#x672C;&#x65E0;&#x635F;&#x8017;&#xFF0C;&#x76F4;&#x63A5;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x64CD;&#x4F5C; &#x9884;&#x9632;Sql&#x6CE8;&#x5165;&#xFF1A;&#x5185;&#x7F6E; Sql &#x6CE8;&#x5165;&#x5265;&#x79BB;&#x5668;&#xFF0C;&#x6709;&#x6548;&#x9884;&#x9632;Sql&#x6CE8;&#x5165;&#x653B;&#x51FB; &#x901A;&#x7528;CRUD&#x64CD;&#x4F5C;&#xFF1A;&#x5185;&#x7F6E;&#x901A;&#x7528; Mapper&#x3001;&#x901A;&#x7528; Service&#xFF0C;&#x4EC5;&#x4EC5;&#x901A;&#x8FC7;&#x5C11;&#x91CF;&#x914D;&#x7F6E;&#x5373;&#x53EF;&#x5B9E;&#x73B0;&#x5355;&#x8868;&#x5927;&#x90E8;&#x5206; CRUD &#x64CD;&#x4F5C;&#xFF0C;&#x66F4;&#x6709;&#x5F3A;&#x5927;&#x7684;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;&#xFF0C;&#x6EE1;&#x8DB3;&#x5404;&#x7C7B;&#x4F7F;&#x7528;&#x9700;&#x6C42; &#x591A;&#x79CD;&#x4E3B;&#x952E;&#x7B56;&#x7565;&#xFF1A;&#x652F;&#x6301;&#x591A;&#x8FBE;4&#x79CD;&#x4E3B;&#x952E;&#x7B56;&#x7565;&#xFF08;&#x5185;&#x542B;&#x5206;&#x5E03;&#x5F0F;&#x552F;&#x4E00;ID&#x751F;&#x6210;&#x5668;&#xFF09;&#xFF0C;&#x53EF;&#x81EA;&#x7531;&#x914D;&#x7F6E;&#xFF0C;&#x5B8C;&#x7F8E;&#x89E3;&#x51B3;&#x4E3B;&#x952E;&#x95EE;&#x9898; &#x652F;&#x6301;&#x70ED;&#x52A0;&#x8F7D;&#xFF1A;Mapper &#x5BF9;&#x5E94;&#x7684; XML &#x652F;&#x6301;&#x70ED;&#x52A0;&#x8F7D;&#xFF0C;&#x5BF9;&#x4E8E;&#x7B80;&#x5355;&#x7684; CRUD &#x64CD;&#x4F5C;&#xFF0C;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x65E0; XML &#x542F;&#x52A8; &#x652F;&#x6301;ActiveRecord&#xFF1A;&#x652F;&#x6301; ActiveRecord &#x5F62;&#x5F0F;&#x8C03;&#x7528;&#xFF0C;&#x5B9E;&#x4F53;&#x7C7B;&#x53EA;&#x9700;&#x7EE7;&#x627F; Model &#x7C7B;&#x5373;&#x53EF;&#x5B9E;&#x73B0;&#x57FA;&#x672C; CRUD &#x64CD;&#x4F5C; &#x652F;&#x6301;&#x4EE3;&#x7801;&#x751F;&#x6210;&#xFF1A;&#x91C7;&#x7528;&#x4EE3;&#x7801;&#x6216;&#x8005; Maven &#x63D2;&#x4EF6;&#x53EF;&#x5FEB;&#x901F;&#x751F;&#x6210; Mapper &#x3001; Model &#x3001; Service &#x3001; Controller &#x5C42;&#x4EE3;&#x7801;&#xFF0C;&#x652F;&#x6301;&#x6A21;&#x677F;&#x5F15;&#x64CE;&#xFF0C;&#x66F4;&#x6709;&#x8D85;&#x591A;&#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E;&#x7B49;&#x60A8;&#x6765;&#x4F7F;&#x7528;&#xFF08;P.S. &#x6BD4; Mybatis &#x5B98;&#x65B9;&#x7684; Generator &#x66F4;&#x52A0;&#x5F3A;&#x5927;&#xFF01;&#xFF09; &#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x901A;&#x7528;&#x64CD;&#x4F5C;&#xFF1A;&#x652F;&#x6301;&#x5168;&#x5C40;&#x901A;&#x7528;&#x65B9;&#x6CD5;&#x6CE8;&#x5165;&#xFF08; Write once, use anywhere &#xFF09; &#x652F;&#x6301;&#x5173;&#x952E;&#x8BCD;&#x81EA;&#x52A8;&#x8F6C;&#x4E49;&#xFF1A;&#x652F;&#x6301;&#x6570;&#x636E;&#x5E93;&#x5173;&#x952E;&#x8BCD;&#xFF08;order&#x3001;key&#x2026;&#x2026;&#xFF09;&#x81EA;&#x52A8;&#x8F6C;&#x4E49;&#xFF0C;&#x8FD8;&#x53EF;&#x81EA;&#x5B9A;&#x4E49;&#x5173;&#x952E;&#x8BCD; &#x5185;&#x7F6E;&#x5206;&#x9875;&#x63D2;&#x4EF6;&#xFF1A;&#x57FA;&#x4E8E; Mybatis &#x7269;&#x7406;&#x5206;&#x9875;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x65E0;&#x9700;&#x5173;&#x5FC3;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#xFF0C;&#x914D;&#x7F6E;&#x597D;&#x63D2;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x5199;&#x5206;&#x9875;&#x7B49;&#x540C;&#x4E8E;&#x666E;&#x901A;List&#x67E5;&#x8BE2; &#x5185;&#x7F6E;&#x6027;&#x80FD;&#x5206;&#x6790;&#x63D2;&#x4EF6;&#xFF1A;&#x53EF;&#x8F93;&#x51FA; Sql &#x8BED;&#x53E5;&#x4EE5;&#x53CA;&#x5176;&#x6267;&#x884C;&#x65F6;&#x95F4;&#xFF0C;&#x5EFA;&#x8BAE;&#x5F00;&#x53D1;&#x6D4B;&#x8BD5;&#x65F6;&#x542F;&#x7528;&#x8BE5;&#x529F;&#x80FD;&#xFF0C;&#x80FD;&#x6709;&#x6548;&#x89E3;&#x51B3;&#x6162;&#x67E5;&#x8BE2; &#x5185;&#x7F6E;&#x5168;&#x5C40;&#x62E6;&#x622A;&#x63D2;&#x4EF6;&#xFF1A;&#x63D0;&#x4F9B;&#x5168;&#x8868; delete &#x3001; update &#x64CD;&#x4F5C;&#x667A;&#x80FD;&#x5206;&#x6790;&#x963B;&#x65AD;&#xFF0C;&#x9884;&#x9632;&#x8BEF;&#x64CD;&#x4F5C; &#x4E8C;&#x3001;&#x96C6;&#x6210;MybatisPlus2.1.Maven&#x5BFC;&#x5165;MybatisPlus&#x4F9D;&#x8D56;12345&lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt; &lt;version&gt;3.0-gamma&lt;/version&gt;&lt;/dependency&gt; 2.2.&#x4FEE;&#x6539;sqpsessionFactoryBean123456789101112&lt;!-- &#x914D;&#x7F6E;SqlSessionFactoryBean Mybatis&#x63D0;&#x4F9B;&#x7684;: org.mybatis.spring.SqlSessionFactoryBean MP&#x63D0;&#x4F9B;&#x7684;:com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean --&gt;&lt;!-- &#x914D;&#x7F6E;sqlsessionFactoryBean --&gt;&lt;bean id=&quot;sqlSessionFactoryBean&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt; &lt;!-- &#x6570;&#x636E;&#x6E90; --&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt; &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt; &lt;!-- &#x522B;&#x540D;&#x5904;&#x7406; --&gt; &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.luo.beans&quot;&gt;&lt;/property&gt;&lt;/bean&gt; &#x4E09;&#x3001;&#x5165;&#x95E8;&#x7684;Hello World3.1.&#x51C6;&#x5907;&#x6570;&#x636E;&#x8868;123456789101112131415DROP TABLE IF EXISTS `tbl_user`;CREATE TABLE `tbl_user` ( `email` varchar(50) DEFAULT NULL, `age` int(11) DEFAULT NULL, `gender` char(255) DEFAULT NULL, `user_name` varchar(255) DEFAULT NULL, `id` int(11) NOT NULL AUTO_INCREMENT, PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;INSERT INTO `tbl_user` VALUES (&apos;243518985@qq.com&apos;, 24, &apos;1&apos;, &apos;&#x7F57;&#x5EB7;&#x5143; &apos;, 1);INSERT INTO `tbl_user` VALUES (&apos;1835856@qq.com&apos;, 34, &apos;2&apos;, &apos;&#x5F20;&#x4E09;&apos;, 2);INSERT INTO `tbl_user` VALUES (&apos;323134435@163.com&apos;, 53, &apos;1&apos;, &apos;&#x674E;&#x56DB;&apos;, 3);INSERT INTO `tbl_user` VALUES (&apos;345464566@qq.com&apos;, 43, &apos;1&apos;, &apos;&#x738B;&#x4E94;&apos;, 4);INSERT INTO `tbl_user` VALUES (&apos;luokangyuansb@gmail.com&apos;, 45, &apos;1&apos;, &apos;&#x8D75;&#x516D;&apos;, 5); 3.2.&#x51C6;&#x5907;Java&#x5B9E;&#x4F53;&#x7C7B;123456789101112public class User { private Integer id; private String userName; private String email; private Integer gender; private Integer age;} 3.3.&#x52A0;&#x5165;&#x4F9D;&#x8D56;&#x7684;jar&#x5305;1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;dependencies&gt; &lt;!-- mp&#x4F9D;&#x8D56;:mybatisPlus &#x4F1A;&#x81EA;&#x52A8;&#x7684;&#x7EF4;&#x62A4;Mybatis &#x4EE5;&#x53CA;MyBatis-spring&#x76F8;&#x5173;&#x7684;&#x4F9D;&#x8D56;--&gt; &lt;dependency&gt; &lt;groupId&gt;com.baomidou&lt;/groupId&gt; &lt;artifactId&gt;mybatis-plus&lt;/artifactId&gt; &lt;version&gt;2.3&lt;/version&gt; &lt;/dependency&gt; &lt;!--junit --&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.9&lt;/version&gt; &lt;/dependency&gt; &lt;!-- log4j --&gt; &lt;dependency&gt; &lt;groupId&gt;log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j&lt;/artifactId&gt; &lt;version&gt;1.2.17&lt;/version&gt; &lt;/dependency&gt; &lt;!-- c3p0 --&gt; &lt;dependency&gt; &lt;groupId&gt;com.mchange&lt;/groupId&gt; &lt;artifactId&gt;c3p0&lt;/artifactId&gt; &lt;version&gt;0.9.5.2&lt;/version&gt; &lt;/dependency&gt; &lt;!-- mysql --&gt; &lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.11&lt;/version&gt; &lt;/dependency&gt; &lt;!-- spring --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-context&lt;/artifactId&gt; &lt;version&gt;4.3.10.RELEASE&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-orm&lt;/artifactId&gt; &lt;version&gt;4.3.10.RELEASE&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 3.5.mybatis-config.xml&#x6587;&#x4EF6;12345&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;&lt;configuration&gt;&lt;/configuration&gt; 3.6.log4j.xml&#x6587;&#x4EF6;12345678910111213141516171819202122&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;!DOCTYPE log4j:configuration SYSTEM &quot;log4j.dtd&quot;&gt; &lt;log4j:configuration xmlns:log4j=&quot;http://jakarta.apache.org/log4j/&quot;&gt; &lt;appender name=&quot;STDOUT&quot; class=&quot;org.apache.log4j.ConsoleAppender&quot;&gt; &lt;param name=&quot;Encoding&quot; value=&quot;UTF-8&quot; /&gt; &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt; &lt;param name=&quot;ConversionPattern&quot; value=&quot;%-5p %d{MM-dd HH:mm:ss,SSS} %m (%F:%L) \n&quot; /&gt; &lt;/layout&gt; &lt;/appender&gt; &lt;logger name=&quot;java.sql&quot;&gt; &lt;level value=&quot;debug&quot; /&gt; &lt;/logger&gt; &lt;logger name=&quot;org.apache.ibatis&quot;&gt; &lt;level value=&quot;info&quot; /&gt; &lt;/logger&gt; &lt;root&gt; &lt;level value=&quot;debug&quot; /&gt; &lt;appender-ref ref=&quot;STDOUT&quot; /&gt; &lt;/root&gt;&lt;/log4j:configuration&gt; 3.7.db.properties&#x6587;&#x4EF6;1234jdbc.driver=com.mysql.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Hongkongjdbc.username=rootjdbc.password=jiamei@20141107. 3.8.applicationContext.xml&#x6587;&#x4EF6;123456789101112131415161718192021222324252627282930&lt;!-- &#x6570;&#x636E;&#x6E90; --&gt;&lt;context:property-placeholder location=&quot;classpath:db.properties&quot; /&gt;&lt;bean id=&quot;dataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt; &lt;property name=&quot;driverClass&quot; value=&quot;${jdbc.driver}&quot;&gt;&lt;/property&gt; &lt;property name=&quot;jdbcUrl&quot; value=&quot;${jdbc.url}&quot;&gt;&lt;/property&gt; &lt;property name=&quot;user&quot; value=&quot;${jdbc.username}&quot;&gt;&lt;/property&gt; &lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;!--&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x5668; --&gt;&lt;bean id=&quot;dataSourceTransactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;!--&#x57FA;&#x4E8E;&#x6CE8;&#x89E3;&#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406; --&gt;&lt;tx:annotation-driven transaction-manager=&quot;dataSourceTransactionManager&quot; /&gt;&lt;!-- &#x914D;&#x7F6E;SqlSessionFactoryBean Mybatis&#x63D0;&#x4F9B;&#x7684;: org.mybatis.spring.SqlSessionFactoryBean MP&#x63D0;&#x4F9B;&#x7684;:com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean --&gt;&lt;!-- &#x914D;&#x7F6E;sqlsessionFactoryBean --&gt;&lt;bean id=&quot;sqlSessionFactoryBean&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt; &lt;!-- &#x6570;&#x636E;&#x6E90; --&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt; &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt; &lt;!-- &#x522B;&#x540D;&#x5904;&#x7406; --&gt; &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.luo.beans&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;!-- &#x914D;&#x7F6E;mybatis&#x626B;&#x63CF;&#x7684;mapper&#x63A5;&#x53E3;&#x8DEF;&#x5F84;--&gt;&lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt; &lt;property name=&quot;basePackage&quot; value=&quot;com.luo.mapper&quot;&gt;&lt;/property&gt;&lt;/bean&gt; 3.9.&#x901A;&#x7528;&#x7684;CRUD&#x64CD;&#x4F5C;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x5F20;user&#x8868;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5BF9;&#x8FD9;&#x4E2A;&#x8868;&#x8FDB;&#x884C;&#x589E;&#x5220;&#x6539;&#x67E5;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;&#x8BF4;&#x6CA1;&#x6709;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x7684;&#x8BDD;&#xFF0C;&#x5728;mybatis&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7F16;&#x5199;UserMapper&#x63A5;&#x53E3;&#xFF0C;&#x624B;&#x5199;CRUD&#x65B9;&#x6CD5;&#xFF0C;&#x5728;UserMapper.xml&#x6587;&#x4EF6;&#x4E2D;&#x5199;&#x5BF9;&#x5E94;&#x7684;sql&#x8BED;&#x53E5;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5728;MybatisPlus&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x521B;&#x5EFA;UserMapper&#x63A5;&#x53E3;&#xFF0C;&#x7EE7;&#x627F;BaseMapper&#x63A5;&#x53E3;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;CRUD&#x64CD;&#x4F5C;&#xFF0C;&#x751A;&#x81F3;&#x4E0D;&#x9700;&#x8981;&#x521B;&#x5EFA;SQl&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x3002; 123public interface UserMapper extends BaseMapper&lt;User&gt;{} &#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5199;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;&#xFF0C;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;CRUD&#xFF0C;&#x6765;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7C7B;&#x4E2D;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 123456public class TestMp { private ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;); private UserMapper userMapper = ioc.getBean(&quot;userMapper&quot;,UserMapper.class);} &#x8BF4;&#x660E;&#xFF1A;&#x5728;&#x6D4B;&#x8BD5;&#x7C7B;&#x4E2D;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x4ECE;SpringIOC&#x5BB9;&#x5668;&#x4E2D;&#x83B7;&#x53D6;&#x7684;userMapper&#x8FDB;&#x884C;CRUD&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C; &#x4FDD;&#x5B58;&#x4E00;&#x6761;&#x6570;&#x636E;userMapper.insert(user); 123456789101112@Testpublic void insert(){ User user = new User(); user.setUserName(&quot;luokangyuan&quot;); user.setAge(66); user.setEmail(&quot;2356775645@qq.com&quot;); user.setGender(2); Integer result = userMapper.insert(user); System.out.println(result); // &#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x63D2;&#x5165;&#x6570;&#x636E;&#x8FD4;&#x56DE;&#x7684;&#x81EA;&#x589E;&#x4E3B;&#x952E;&#x503C; System.out.println(user.getId()+&quot;======&quot;);} &#x63D2;&#x5165;&#x6570;&#x636E;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;insert&#x548C;insertAllColumn&#xFF0C;&#x4E8C;&#x8005;&#x7684;&#x6267;&#x884C;&#x7ED3;&#x679C;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E;&#xFF0C;&#x524D;&#x8005;&#x4F1A;&#x6839;&#x636E;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x503C;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x975E;&#x7A7A;&#x6821;&#x9A8C;&#xFF0C;&#x5728;&#x63D2;&#x5165;&#x7684;sql&#x8BED;&#x53E5;&#x4E2D;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5B9E;&#x4F53;&#x7C7B;&#x5C5E;&#x6027;&#x4E3A;&#x7A7A;&#x7684;&#x5B57;&#x6BB5;&#xFF1B; &#x6CE8;&#x610F;&#xFF1A;&#x5728;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5B9E;&#x4F53;&#x7C7B;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8868;&#x548C;&#x4E3B;&#x952E;&#x751F;&#x6210;&#x7B56;&#x7565; &#x4E3B;&#x952E;&#x751F;&#x6210;&#x7B56;&#x7565;&#xFF1A;@TableId(type = IdType.AUTO,value = &quot;id&quot;),value&#x5C5E;&#x6027;&#x503C;&#x5F53;&#x5B9E;&#x4F53;&#x7C7B;&#x5B57;&#x6BB5;&#x540D;&#x548C;&#x6570;&#x636E;&#x5E93;&#x4E00;&#x81F4;&#x65F6;&#x53EF;&#x4EE5;&#x4E0D;&#x5199;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;value&#x6307;&#x7684;&#x662F;&#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x540D;&#x79F0;&#xFF0C;type&#x7684;&#x7C7B;&#x578B;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#xFF1A; IdType.AUTO&#xFF1A;&#x6570;&#x636E;&#x5E93;ID&#x81EA;&#x589E; IdType.INPUT&#xFF1A;&#x7528;&#x6237;&#x8F93;&#x5165;ID IdType.ID_WORKER&#xFF1A;&#x5168;&#x5C40;&#x552F;&#x4E00;ID&#xFF0C;&#x5185;&#x5BB9;&#x4E3A;&#x7A7A;&#x81EA;&#x52A8;&#x586B;&#x5145;&#xFF08;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#xFF09; IdType.UUID&#xFF1A;&#x5168;&#x5C40;&#x552F;&#x4E00;ID&#xFF0C;&#x5185;&#x5BB9;&#x4E3A;&#x7A7A;&#x81EA;&#x52A8;&#x586B;&#x5145; &#x5B9E;&#x4F53;&#x5BF9;&#x5E94;&#x8868;&#x540D;&#x6CE8;&#x89E3;&#xFF1A;@TableName(value = &quot;tbl_user&quot;);&#x6307;&#x5B9A;&#x5F53;&#x524D;&#x5B9E;&#x4F53;&#x7C7B;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8868; &#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x6620;&#x5C04;&#x540D;&#x79F0;&#xFF1A;@TableField(value = &quot;user_name&quot;),&#x5F53;&#x7981;&#x6B62;&#x9A7C;&#x5CF0;&#x6620;&#x5C04;&#x89C4;&#x5219;&#x540E;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; &#x5FFD;&#x7565;&#x63D2;&#x5165;&#x5230;&#x8868;&#x7684;&#x5B57;&#x6BB5;&#xFF1A;@ableField(exist = false),&#x5982;&#x4E0B;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x6CA1;&#x6709;money&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5FFD;&#x7565;&#xFF0C;&#x90A3;&#x4E48;&#x63D2;&#x5165;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x627E;&#x4E0D;&#x5230;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#xFF1B; 12@TableField(exist = false)private Double money; &#x66F4;&#x65B0;&#x4E00;&#x6761;&#x6570;&#x636E; 12345678910@Testpublic void update(){ User user = new User(); user.setId(7); user.setUserName(&quot;&#x738B;&#x516B;&quot;); user.setAge(56); //user.setEmail(&quot;2356775645@qq.com&quot;); user.setGender(2); Integer result = userMapper.updateById(user);} &#x540C;&#x7406;&#xFF1A;&#x66F4;&#x65B0;&#x65B9;&#x6CD5;&#x4E5F;&#x6709;&#x4E24;&#x4E2A;updateById&#x548C;updateAllColumnById,&#x524D;&#x8005;&#x4F1A;&#x5BF9;&#x5B9E;&#x4F53;&#x7C7B;&#x5C5E;&#x6027;&#x540D;&#x8FDB;&#x884C;&#x975E;&#x7A7A;&#x6821;&#x9A8C;&#xFF0C;&#x4E3A;&#x7A7A;&#x7684;&#x5C31;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5728;sql&#x8BED;&#x53E5;&#x4E2D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E0D;&#x4F1A;&#x66F4;&#x65B0;&#x539F;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x4F1A;&#x66F4;&#x65B0;&#x6240;&#x6709;&#x5217;&#xFF0C;&#x5982;&#x679C;&#x5B9E;&#x4F53;&#x7C7B;&#x5C5E;&#x6027;&#x503C;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x6570;&#x636E;&#x5E93;&#x5BF9;&#x5E94;&#x5B57;&#x6BB5;&#x540D;&#x66F4;&#x65B0;&#x4E3A;null&#xFF1B; &#x67E5;&#x8BE2;&#x4E00;&#x6761;&#x6570;&#x636E; 12345678910111213141516171819202122232425@Testpublic void select(){ // 1.&#x901A;&#x8FC7;ID&#x67E5;&#x8BE2;&#x4E00;&#x6761;&#x6570;&#x636E; User user = userMapper.selectById(7); // 2.&#x901A;&#x8FC7;&#x591A;&#x4E2A;&#x5217;&#x8FDB;&#x884C;&#x67E5;&#x8BE2;,&#x5982;&#x679C;&#x67E5;&#x5904;&#x7684;&#x6570;&#x636E;&#x6709;&#x591A;&#x6761;&#x5C31;&#x4F1A;&#x62A5;&#x9519; User u = new User(); u.setId(2); u.setUserName(&quot;&#x5F20;&#x4E09;&quot;); User user1 = userMapper.selectOne(u); // 3.&#x67E5;&#x8BE2;&#x7B26;&#x5408;&#x591A;&#x4E2A;ID&#x7684;&#x6570;&#x636E;,&#x4F7F;&#x7528;&#x7684;&#x662F;in&#x5173;&#x952E;&#x5B57;&#x67E5;&#x8BE2; List&lt;Integer&gt; ids = new ArrayList&lt;Integer&gt;(); ids.add(3); ids.add(4); ids.add(5); List&lt;User&gt; users = userMapper.selectBatchIds(ids); // 4.&#x901A;&#x8FC7;&#x5C01;&#x88C5;map&#x6761;&#x4EF6;,&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5C01;&#x88C5;&#x7684;&#x662F;&#x5217;&#x5B57;&#x6BB5;&#x540D;&#xFF0C;&#x4E0D;&#x662F;&#x5B9E;&#x4F53;&#x91CC;&#x5C5E;&#x6027;&#x540D;&#xFF0C; // map&#x4E2D;&#x7684;key&#x5145;&#x5F53;sql&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#x540D;&#x79F0; Map&lt;String,Object&gt; maps = new HashMap&lt;String, Object&gt;(); maps.put(&quot;user_name&quot;,&quot;&#x5F20;&#x4E09;&quot;); maps.put(&quot;age&quot;,347); List&lt;User&gt; users1 = userMapper.selectByMap(maps); // 5.&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x65B9;&#x6CD5;,&#x67E5;&#x770B;&#x7B2C;&#x4E8C;&#x9875;&#xFF0C;&#x6BCF;&#x9875;2&#x6761;&#x6570;&#x636E;,&#x5728;sql&#x8BED;&#x53E5;&#x5E76;&#x6CA1;&#x6709;limit&#x5173;&#x952E;&#x5B57; // &#x6240;&#x4EE5;&#x8981;&#x5B9E;&#x73B0;&#x7269;&#x7406;&#x5206;&#x9875;&#xFF0C;&#x8FD8;&#x9700;&#x501F;&#x52A9;&#x63D2;&#x4EF6;&#xFF0C;&#x4F8B;&#x5982;mybatis&#x7684;pageHepler&#x6216;&#x8005;MybatisPlus&#x63D0;&#x4F9B;&#x7684;&#x5206;&#x9875;&#x63D2;&#x4EF6; List&lt;User&gt; users2 = userMapper.selectPage(new Page&lt;User&gt;(2, 2), null);} &#x5220;&#x9664;&#x4E00;&#x6761;&#x6570;&#x636E; 123456789101112131415@Testpublic void delete(){ // 1.&#x6839;&#x636E;ID&#x5220;&#x9664; Integer integer = userMapper.deleteById(8); // 2.&#x6839;&#x636E;&#x6761;&#x4EF6;&#x5220;&#x9664;&#xFF0C;map&#x4E2D;&#x7684;key&#x4E3A;&#x5217;&#x540D;&#xFF0C;&#x5343;&#x4E07;&#x6CE8;&#x610F; Map&lt;String ,Object&gt; maps = new HashMap&lt;String, Object&gt;(); maps.put(&quot;age&quot;,66); maps.put(&quot;gender&quot;,2); Integer integer1 = userMapper.deleteByMap(maps); // 3.&#x6839;&#x636E;ID&#x6279;&#x91CF;&#x5220;&#x9664;,&#x4F7F;&#x7528;in&#x5173;&#x952E;&#x5B57; List&lt;Integer&gt; ids = new ArrayList&lt;Integer&gt;(); ids.add(5); ids.add(7); Integer integer2 = userMapper.deleteBatchIds(ids);} 3.10.MybatisPlus&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x5728;&#x524D;&#x9762;&#x7684;CRUD&#x64CD;&#x4F5C;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x4F7F;&#x7528;&#x76F4;&#x63A5;&#x6CE8;&#x89E3;&#x6307;&#x5B9A;&#x4E3B;&#x952E;&#x751F;&#x6210;&#x7B56;&#x7565;&#x548C;&#x8868;&#x540D;&#x5230;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x6620;&#x5C04;&#xFF0C;&#x4F46;&#x662F;&#x914D;&#x7F6E;&#x7684;&#x4EC5;&#x4EC5;&#x4F1A;&#x5BF9;&#x5F53;&#x524D;&#x5B9E;&#x4F53;&#x7C7B;&#x8D77;&#x4F5C;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 123456789&lt;!-- &#x5B9A;&#x4E49;MybatisPlus&#x7684;&#x5168;&#x5C40;&#x7B56;&#x7565;&#x914D;&#x7F6E;--&gt;&lt;bean id =&quot;globalConfiguration&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt; &lt;!--&#x6620;&#x5C04;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x5212;&#x7EBF;&#x5B57;&#x6BB5;&#x540D;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x7684;&#x6620;&#x5C04;--&gt; &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x4E3B;&#x952E;&#x7B56;&#x7565; --&gt; &lt;property name=&quot;idType&quot; value=&quot;0&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x8868;&#x524D;&#x7F00;&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt; &lt;property name=&quot;tablePrefix&quot; value=&quot;tbl_&quot;&gt;&lt;/property&gt;&lt;/bean&gt; &#x7136;&#x540E;&#xFF0C;&#x5C06;MybatisPlus&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x6CE8;&#x5165;&#x5230;sqlSessionFactoryBean&#x4E2D; 12&lt;!-- &#x6CE8;&#x5165;&#x5168;&#x5C40;MP&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt;&lt;property name=&quot;globalConfig&quot; ref=&quot;globalConfiguration&quot;&gt;&lt;/property&gt; 3.11.mybatisPlusCRUD&#x603B;&#x7ED3;&#x5728;&#x524D;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x4E86;&#x57FA;&#x672C;&#x7684;CRUD&#x64CD;&#x4F5C;&#xFF0C;&#x64CD;&#x4F5C;&#x7B80;&#x5355;&#xFF0C;&#x4EC5;&#x4EC5;&#x53EA;&#x9700;&#x7EE7;&#x627F;&#x4E00;&#x4E2A;BaseMapper&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#xFF0C;&#x5B9E;&#x73B0;&#x5355;&#x4E00;&#xFF0C;&#x6279;&#x91CF;&#xFF0C;&#x5206;&#x9875;&#x7B49;&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x64CD;&#x4F5C;&#xFF0C;&#x5F88;&#x5927;&#x7684;&#x51CF;&#x5C11;&#x4E86;&#x5F00;&#x53D1;&#x8D1F;&#x62C5;&#xFF0C;&#x4F46;&#x8FD9;&#x4EC5;&#x4EC5;&#x662F;Mybatisplus&#x7684;&#x51B0;&#x5C71;&#x4E00;&#x89D2;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x591A;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5230;MybatisPlus&#x4E2D;&#x5F3A;&#x5927;&#x7684;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;EntityWrapper&#xFF1B; &#x56DB;&#x3001;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668;&#x5C31;&#x662F;EntityWrapper&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5C01;&#x88C5;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x5BF9;&#x8C61;&#xFF0C;&#x8BA9;&#x5F00;&#x53D1;&#x8005;&#x81EA;&#x7531;&#x7684;&#x5B9A;&#x4E49;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;sql&#x7684;&#x62FC;&#x63A5;&#xFF0C;&#x6392;&#x5E8F;&#x6216;&#x8005;&#x5B9E;&#x4F53;&#x53C2;&#x6570;&#x7B49;&#xFF1B;&#x6761;&#x4EF6;&#x6784;&#x9020;&#x5668; &#x6CE8;&#x610F;&#xFF1A;&#x4F7F;&#x7528;&#x7684;&#x53C2;&#x6570;&#x662F;&#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x540D;&#x79F0;&#xFF0C;&#x4E0D;&#x662F;Java&#x7C7B;&#x5C5E;&#x6027;&#x540D; 4.1.selectPage&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;1234567891011@Testpublic void entityWrapperTedst(){ // &#x5206;&#x9875;&#x67E5;&#x8BE2;&#x7B2C;&#x4E00;&#x9875;&#xFF0C;&#x6BCF;&#x9875;2&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x5E74;&#x9F84;&#x5728;41-53&#x4E4B;&#x95F4;&#xFF0C;genger&#x4E3A;1&#xFF0C;user_name&#x4E3A;&#x738B;&#x4E94;&#x7684;&#x7528;&#x6237; List&lt;User&gt; users = userMapper.selectPage(new Page&lt;User&gt;(1, 2), new EntityWrapper&lt;User&gt;() .between(&quot;age&quot;, 41, 53) .eq(&quot;gender&quot;,1) .eq(&quot;user_name&quot;,&quot;&#x738B;&#x4E94;&quot;) );} 4.2.&#x6A21;&#x7CCA;&#x67E5;&#x8BE2;&#x548C;&#x6216;&#x67E5;&#x8BE2;123456789@Testpublic void selectListTest(){ List&lt;User&gt; users = userMapper.selectList(new EntityWrapper&lt;User&gt;() .eq(&quot;gender&quot;, 1) .like(&quot;user_name&quot;, &quot;&#x4E09;&quot;) .orNew() .like(&quot;email&quot;, &quot;5&quot;) );} &#x4F7F;&#x7528;&#x6216;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;or()&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;orNew(),&#x4E8C;&#x8005;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;sql&#x4E2D;&#x7684;&#x6761;&#x4EF6;&#x90E8;&#x5206;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; &#x4F7F;&#x7528;or()&#x7684;sql&#x8BED;&#x53E5; 1SELECT id AS id,user_name AS userName,email,gender,age FROM tbl_user WHERE (gender = ? AND user_name LIKE ? OR email LIKE ?) &#x4F7F;&#x7528;orNew()&#x7684;sql&#x8BED;&#x53E5; 1SELECT id AS id,user_name AS userName,email,gender,age FROM tbl_user WHERE (gender = ? AND user_name LIKE ?) OR (email LIKE ?) 4.3.&#x4FEE;&#x6539;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x6570;&#x636E;1234567891011@Testpublic void updataByEntityWrapper(){ User user = new User(); user.setEmail(&quot;luokangyuan@sina,com&quot;); user.setAge(24); user.setUserName(&quot;&#x56DB;&#x5DDD;&#x9EBB;&#x9171;&quot;); Integer update = userMapper.update(user, new EntityWrapper&lt;User&gt;() .eq(&quot;user_name&quot;,&quot;&#x674E;&#x56DB;&quot;) .eq(&quot;age&quot;,53) );} 4.4.&#x5220;&#x9664;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x6570;&#x636E;1234567@Testpublic void deleteByEntityWrapper(){ userMapper.delete(new EntityWrapper&lt;User&gt;() .eq(&quot;user_name&quot;,&quot;&#x738B;&#x516B;&quot;) .eq(&quot;age&quot;,56) );} 4.5.&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x4E4B;ConditionCondition&#x7EE7;&#x627F;&#x4E86;Wrapper&#x7C7B;&#xFF0C;&#x53E6;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x518D;new&#x4E00;&#x4E2A;Condition&#x5BF9;&#x8C61;&#xFF0C;&#x76F4;&#x63A5;&#x8C03;&#x7528;condition&#x7C7B;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;create&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;condition&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;wrapper&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5;&#xFF0C;&#x7B80;&#x5355;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#xFF1A; 123456@Testpublic void testCondition(){ userMapper.selectPage(new Page&lt;User&gt;(1,2), Condition.create() .between(&quot;age&quot;,45,56) );} &#x4E94;&#x3001;&#x6D3B;&#x52A8;&#x8BB0;&#x5F55;ARActive Record(&#x6D3B;&#x52A8;&#x8BB0;&#x5F55;)&#xFF0C;&#x7B80;&#x79F0;AR&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x9886;&#x57DF;&#x6A21;&#x578B;&#x6A21;&#x5F0F;&#xFF0C;&#x7279;&#x70B9;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x7C7B;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x8868;&#xFF0C;&#x800C;&#x6A21;&#x578B;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x5BF9;&#x5E94;&#x8868;&#x4E2D;&#x7684;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#xFF1B; 5.1.&#x5F00;&#x542F;AR&#x6A21;&#x5F0F;&#x5F00;&#x542F;AR&#x6A21;&#x5F0F;&#x7684;&#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x8BA9;&#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x4F53;&#x7C7B;&#x7EE7;&#x627F;Model&#x7C7B;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x5176;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x6307;&#x5B9A;&#x4E3B;&#x952E;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x4E0B; 1234567public class User extends Model&lt;User&gt; { @Override protected Serializable pkVal() { return id; }} 5.2.&#x63D2;&#x5165;&#x4E00;&#x6761;&#x6570;&#x636E;123456789@Testpublic void insert(){ User user = new User(); user.setUserName(&quot;&#x6749;&#x6728;&quot;); user.setAge(25); user.setEmail(&quot;shancnu@163.com&quot;); user.setGender(1); boolean rs = user.insert();} 5.3.&#x4FEE;&#x6539;&#x4E00;&#x6761;&#x6570;&#x636E;12345678@Testpublic void update(){ User user = new User(); user.setUserName(&quot;&#x6749;&#x6728;&#x535A;&#x5BA2;&quot;); user.setAge(35); user.setId(10); boolean rs = user.updateById();} &#x8BF4;&#x660E;&#xFF1A;&#x548C;&#x901A;&#x7528;&#x7684;CRUD&#x4E2D;&#x7684;&#x66F4;&#x65B0;&#x65B9;&#x6CD5;&#x4E00;&#x6837;&#xFF0C;updateAllColumnById()&#x4F1A;&#x66F4;&#x65B0;&#x6240;&#x6709;&#x5217; 5.4.&#x67E5;&#x8BE2;&#x6570;&#x636E;12345678910111213141516@Testpublic void select(){ User user = new User(); user.setId(2); // &#x6839;&#x636E;ID&#x67E5;&#x8BE2;&#x4E00;&#x6761;&#x6570;&#x636E; User user1 = user.selectById(); // &#x67E5;&#x8BE2;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E; List&lt;User&gt; users = user.selectAll(); // &#x6839;&#x636E;&#x6761;&#x4EF6;&#x67E5;&#x8BE2; List&lt;User&gt; usersList = user.selectList(new EntityWrapper&lt;User&gt;() .like(&quot;user_name&quot;, &quot;&#x4E09;&quot;)); // &#x7EDF;&#x8BA1;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x6570;&#x636E;&#x6570;&#x91CF; int gender = user.selectCount(new EntityWrapper&lt;User&gt;().eq(&quot;gender&quot;, 1)); // &#x7EDF;&#x8BA1;&#x5168;&#x8868;&#x6570;&#x91CF; int count = user.selectCount(null);} 5.5.&#x5220;&#x9664;&#x4E00;&#x6761;&#x6570;&#x636E;1234567@Testpublic void delete(){ User user = new User(); user.setId(7); boolean rs = user.deleteById(); System.out.print(rs);} &#x5F53;&#x7136;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6761;&#x4EF6;&#x5220;&#x9664;&#x591A;&#x6761;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;&#x5F53;&#x5220;&#x9664;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x6570;&#x636E;&#x65F6;&#x5019;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x4E5F;&#x662F;true&#xFF1B; 1234// &#x5220;&#x9664;&#x4E0D;&#x5B58;&#x5728;&#x903B;&#x8F91;&#x5C5E;&#x4E8E;&#x6210;&#x529F;public static boolean delBool(Integer result) { return null != result &amp;&amp; result &gt;= 0;} 5.6.&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5728;&#x524D;&#x9762;&#x7684;CRUD&#x4E2D;&#x7684;&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x8FD4;&#x56DE;&#x7684;&#x662F;list&#x6570;&#x636E;&#x96C6;&#x5408;&#xFF0C;&#x4F46;&#x662F;&#x5728;AR&#x4E2D;&#x8FD4;&#x56DE;&#x7684;&#x5374;&#x662F;Page&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x4E0B; 1234567@Testpublic void selectPage(){ User user = new User(); Page&lt;User&gt; userPage = user.selectPage(new Page&lt;User&gt;(1, 2), new EntityWrapper&lt;User&gt;().like(&quot;user_name&quot;, &quot;&#x4E09;&quot;)); List&lt;User&gt; records = userPage.getRecords();} 5.7.AR&#x603B;&#x7ED3;AR&#x63D0;&#x4F9B;&#x7684;&#x662F;&#x4E00;&#x79CD;&#x66F4;&#x4E3A;&#x5FEB;&#x901F;&#x7684;&#x5B9E;&#x73B0;CRUD&#x64CD;&#x4F5C;&#xFF0C;&#x672C;&#x8D28;&#x5F88;&#x662F;&#x8C03;&#x7528;Mybatis&#x5BF9;&#x5E94;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8BF4;&#x7684;&#x7B80;&#x5355;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x8BED;&#x6CD5;&#x7CD6;&#xFF1B; &#x7CD6;&#x867D;&#x7136;&#x597D;&#x5403;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x4E0D;&#x8981;&#x7BA1;&#x4E0D;&#x4F4F;&#x5634;&#xFF1B; &#x516D;&#x3001;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;&#x6211;&#x4EEC;&#x77E5;&#x9053;mybatis&#x6709;&#x4E00;&#x4E2A;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668;MBG&#xFF0C;&#x53EF;&#x4EE5;&#x751F;&#x6210;Java&#x5B9E;&#x4F53;&#x7C7B;mapper&#x63A5;&#x53E3;&#x548C;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;MybatisPlus&#x5374;&#x66F4;&#x52A0;&#x5F3A;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x751F;&#x6210;service&#x548C;controller&#xFF0C;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x5B9E;&#x4F53;&#x7C7B;&#x662F;&#x5426;&#x652F;&#x6301;AR&#x7B49;&#xFF0C;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5668; &#x8BF4;&#x660E;&#xFF1A;&#x5EFA;&#x8BAE;&#x6570;&#x636E;&#x5E93;&#x8868;&#x540D;&#x548C;&#x5B57;&#x6BB5;&#x540D;&#x91C7;&#x7528;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x65B9;&#x5F0F;&#xFF0C;&#x548C;&#x5B9E;&#x4F53;&#x6765;&#x4E00;&#x81F4;&#xFF0C;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5728;&#x5BF9;&#x5E94;&#x5B9E;&#x4F53;&#x7C7B;&#x4EA7;&#x751F;&#x7684;&#x6027;&#x80FD;&#x635F;&#x8017; 6.1.&#x5BFC;&#x5165;&#x4F9D;&#x8D56;12345&lt;dependency&gt; &lt;groupId&gt;org.apache.velocity&lt;/groupId&gt; &lt;artifactId&gt;velocity-engine-core&lt;/artifactId&gt; &lt;version&gt;2.0&lt;/version&gt;&lt;/dependency&gt; &#x8BF4;&#x660E;&#xFF1A;MybatisPlus&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x7684;&#x662F;velocity&#x6A21;&#x7248;&#x5F15; 6.2.&#x7F16;&#x5199;&#x914D;&#x7F6E;&#x7C7B;12345678910111213141516171819202122232425262728293031323334353637383940414243@Testpublic void testMbg(){ // 1.&#x5168;&#x5C40;&#x914D;&#x7F6E; GlobalConfig globalConfig = new GlobalConfig(); globalConfig.setActiveRecord(true)// &#x662F;&#x5426;&#x5F00;&#x542F;AR&#x6A21;&#x5F0F; .setAuthor(&quot;luokangyuan&quot;) // &#x6307;&#x5B9A;&#x4F5C;&#x8005; .setOutputDir(&quot;/Users/luokangyuan/Documents/project/mybatisdemo/src/main/java&quot;) .setFileOverride(true) // &#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x8986;&#x76D6; .setIdType(IdType.AUTO) // &#x8BBE;&#x7F6E;&#x4E3B;&#x952E;&#x81EA;&#x589E;&#x7B56;&#x7565; .setServiceImplName(&quot;%sService&quot;) // &#x8BBE;&#x7F6E;&#x751F;&#x6210;&#x7684;services&#x63A5;&#x53E3;&#x7684;&#x540D;&#x5B57;&#x7684;&#x9996;&#x5B57;&#x6BCD;&#x662F;&#x5426;&#x4E3A;I .setBaseResultMap(true) // &#x57FA;&#x672C;&#x7684;&#x5B57;&#x6BB5;&#x6620;&#x5C04; .setBaseColumnList(true); // &#x57FA;&#x672C;&#x7684;sql&#x7247;&#x6BB5; // 2.&#x914D;&#x7F6E;&#x6570;&#x636E;&#x6E90; DataSourceConfig dataSourceConfig = new DataSourceConfig(); dataSourceConfig.setDbType(DbType.MYSQL) // &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x5E93;&#x7C7B;&#x578B; .setDriverName(&quot;com.mysql.jdbc.Driver&quot;) .setUrl(&quot;jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Hongkong&quot;) .setUsername(&quot;root&quot;) .setPassword(&quot;jiamei@20141107.&quot;); // 3.&#x7B56;&#x7565;&#x914D;&#x7F6E; StrategyConfig strategyConfig = new StrategyConfig(); strategyConfig.setCapitalMode(true) //&#x5168;&#x5C40;&#x5927;&#x5199;&#x547D;&#x540D; .setDbColumnUnderline(true) // &#x6307;&#x5B9A;&#x8868;&#x540D;&#x548C;&#x5B57;&#x6BB5;&#x540D;&#x662F;&#x5426;&#x4F7F;&#x7528;&#x4E86;&#x4E0B;&#x5212;&#x7EBF; .setNaming(NamingStrategy.underline_to_camel) // &#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x4E0B;&#x5212;&#x7EBF;&#x8F6C;&#x9A7C;&#x5CF0;&#x547D;&#x4EE4;&#x7B56;&#x7565; .setTablePrefix(&quot;tbl_&quot;) // &#x8BBE;&#x7F6E;&#x8868;&#x524D;&#x7F00; .setInclude(&quot;tbl_dept&quot;,&quot;tbl_file&quot;); // &#x8BBE;&#x7F6E;&#x9700;&#x8981;&#x751F;&#x6210;&#x7684;&#x8868; // 4.&#x5305;&#x540D;&#x7B56;&#x7565;&#x914D;&#x7F6E; PackageConfig packageConfig = new PackageConfig(); packageConfig.setParent(&quot;com.luo&quot;) // &#x8BBE;&#x7F6E;&#x7236;&#x5305; .setMapper(&quot;mapper&quot;) .setService(&quot;service&quot;) .setController(&quot;controller&quot;) .setEntity(&quot;beans&quot;) .setXml(&quot;mapper&quot;); // 5. &#x5F00;&#x59CB;&#x751F;&#x6210;&#x4EE3;&#x7801; AutoGenerator autoGenerator = new AutoGenerator(); autoGenerator.setGlobalConfig(globalConfig) .setDataSource(dataSourceConfig) .setStrategy(strategyConfig) .setPackageInfo(packageConfig); autoGenerator.execute();} 6.3.&#x751F;&#x6210;&#x7684;service&#x4EE3;&#x7801;&#x67E5;&#x770B;1234@Servicepublic class DeptService extends ServiceImpl&lt;DeptMapper, Dept&gt; implements IDeptService {} DeptService&#x7EE7;&#x627F;&#x4E86;ServiceImpl&#xFF0C;&#x5728;ServiceImpl&#x4E2D;&#x5C31;&#x5DF2;&#x7ECF;&#x6CE8;&#x5165;&#x4E86;DeptMapper&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x6B21;&#x6CE8;&#x5165;&#xFF0C;&#x5728;ServiceImpl&#x4E2D;&#x4E5F;&#x5E2E;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x5E38;&#x7528;&#x7684;CRUD&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C; 1234567891011@Controller@RequestMapping(&quot;/dept&quot;)public class DeptController { @Autowired private IDeptService service; public String select(){ service.selectList(null); return null; }} &#x4E03;&#x3001;&#x63D2;&#x4EF6;&#x6269;&#x5C55;7.1.&#x6CE8;&#x518C;&#x5206;&#x9875;&#x63D2;&#x4EF6;1234567891011121314&lt;bean id=&quot;sqlSessionFactoryBean&quot; class=&quot;com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean&quot;&gt; &lt;!-- &#x6570;&#x636E;&#x6E90; --&gt; &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt; &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt; &lt;!-- &#x522B;&#x540D;&#x5904;&#x7406; --&gt; &lt;property name=&quot;typeAliasesPackage&quot; value=&quot;com.luo.beans&quot;&gt;&lt;/property&gt; &lt;!-- &#x6CE8;&#x5165;&#x5168;&#x5C40;MP&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt; &lt;property name=&quot;globalConfig&quot; ref=&quot;globalConfiguration&quot;&gt;&lt;/property&gt; &lt;property name=&quot;plugins&quot;&gt; &lt;list&gt; &lt;bean class=&quot;com.baomidou.mybatisplus.plugins.PaginationInterceptor&quot;&gt;&lt;/bean&gt; &lt;/list&gt; &lt;/property&gt;&lt;/bean&gt; &#x771F;&#x6B63;&#x7684;&#x5206;&#x9875;&#x67E5;&#x8BE2; 12345678910111213141516ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);private UserMapper userMapper = ioc.getBean(&quot;userMapper&quot;,UserMapper.class);@Testpublic void testPage(){ Page&lt;User&gt; page = new Page&lt;User&gt;(1,4); List&lt;User&gt; users = userMapper.selectPage(page,null); page.setRecords(users); System.out.print(&quot;&#x603B;&#x8BB0;&#x5F55;&#x6570;&quot;+page.getTotal()); System.out.print(&quot;&#x5F53;&#x524D;&#x9875;&#x7801;&quot;+page.getCurrent()); System.out.print(&quot;&#x603B;&#x9875;&#x7801;&quot;+page.getPages()); System.out.print(&quot;&#x6BCF;&#x9875;&#x8BB0;&#x5F55;&#x6570;&quot;+page.getSize()); System.out.print(&quot;&#x662F;&#x5426;&#x6709;&#x524D;&#x4E00;&#x9875;&quot;+page.hasPrevious()); System.out.print(&quot;&#x662F;&#x5426;&#x6709;&#x540E;&#x4E00;&#x9875;&quot;+page.hasNext());} &#x8BF4;&#x660E;&#xFF1A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x7684;&#x6570;&#x636E;&#x653E;&#x5728;page&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x524D;&#x7AEF;&#x4E00;&#x4E2A;page&#x5BF9;&#x8C61;&#x5373;&#x53EF; 7.2.&#x6267;&#x884C;&#x5206;&#x6790;&#x63D2;&#x4EF6;123&lt;bean class=&quot;com.baomidou.mybatisplus.plugins.SqlExplainInterceptor&quot;&gt; &lt;property name=&quot;stopProceed&quot; value=&quot;true&quot;&gt;&lt;/property&gt;&lt;/bean&gt; &#x6D4B;&#x8BD5;&#x5982;&#x4E0B;&#xFF1A; 1234@Testpublic void testDeltetAll(){ userMapper.delete(null);} sql&#x5206;&#x6790;&#x63D2;&#x4EF6;&#x53EA;&#x652F;&#x6301;mysql5.6.3&#x4EE5;&#x4E0A;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x672C;&#x8D28;&#x5C31;&#x662F;&#x901A;&#x8FC7;sql&#x5206;&#x6790;&#x547D;&#x4EE4;Explain&#x5206;&#x6790;&#x5F53;&#x524D;&#x7684;sql&#x8BED;&#x53E5;&#xFF0C;&#x6839;&#x636E;&#x7ED3;&#x679C;&#x96C6;&#x4E2D;&#x7684;Extra&#x5217;&#x6765;&#x65AD;&#x5B9A;&#x5F53;&#x524D;&#x662F;&#x5426;&#x5168;&#x8868;&#x64CD;&#x4F5C;&#xFF1B; 7.3.&#x6027;&#x80FD;&#x5206;&#x6790;&#x63D2;&#x4EF6;&#x6027;&#x80FD;&#x5206;&#x6790;&#x63D2;&#x4EF6;&#x7528;&#x4E8E;&#x8F93;&#x51FA;&#x6BCF;&#x79D2;sql&#x8BED;&#x53E5;&#x548C;&#x5176;&#x6267;&#x884C;&#x65F6;&#x95F4;,&#x9996;&#x5148;&#x6CE8;&#x518C;&#x63D2;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A; 123&lt;bean class=&quot;com.baomidou.mybatisplus.plugins.PerformanceInterceptor&quot;&gt; &lt;property name=&quot;format&quot; value=&quot;true&quot;&gt;&lt;/property&gt;&lt;/bean&gt; &#x6D4B;&#x8BD5;&#x5982;&#x4E0B;&#xFF1A; 12345678@Testpublic void testPer(){ Dept dept = new Dept(); dept.setDeptName(&quot;&#x5F00;&#x53D1;&#x90E8;&quot;); dept.setDeptCount(&quot;34&quot;); dept.setDeptBegintime(new Date()); dept.insert();} &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A; 12345678Time&#xFF1A;142 ms - ID&#xFF1A;com.luo.mapper.DeptMapper.insertExecute SQL&#xFF1A; INSERT INTO tbl_dept ( dept_count, dept_name, dept_beginTime ) VALUES ( &apos;34&apos;, &apos;&#x5F00;&#x53D1;&#x90E8;&apos;, &apos;2018-08-26 23:09:17.293&apos; )] 7.4.&#x4E50;&#x89C2;&#x9501;&#x63D2;&#x4EF6;&#x5F53;&#x6211;&#x4EEC;&#x5728;&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x6709;&#x65F6;&#x9700;&#x8981;&#x5224;&#x65AD;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x66F4;&#x65B0;&#x4E00;&#x6761;&#x6570;&#x636E;&#x5E93;&#x8BB0;&#x5F55;&#x65F6;&#xFF0C;&#x5E0C;&#x671B;&#x8FD9;&#x6761;&#x8BB0;&#x5F55;&#x6CA1;&#x6709;&#x88AB;&#x522B;&#x4EBA;&#x66F4;&#x65B0;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E50;&#x89C2;&#x9501;&#x63D2;&#x4EF6;&#xFF0C;&#x4ED6;&#x7684;&#x539F;&#x7406;&#x5C31;&#x662F;&#xFF0C;&#x53D6;&#x51FA;&#x8BB0;&#x5F55;&#x65F6;&#xFF0C;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7684;version&#xFF0C;&#x66F4;&#x65B0;&#x7684;&#x65F6;&#x5019;&#x5E26;&#x4E0A;&#x8FD9;&#x4E2A;version&#xFF0C;&#x6267;&#x884C;&#x66F4;&#x65B0;&#x7684;&#x65F6;&#x5019;set version = yourVersion+1 where version = yourVersion,&#x5982;&#x679C;version&#x4E0D;&#x5BF9;&#xFF0C;&#x5219;&#x66F4;&#x65B0;&#x5931;&#x8D25;&#xFF0C;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;@version&#x7528;&#x4E8E;&#x6CE8;&#x89E3;&#x5B9E;&#x4F53;&#x5B57;&#x6BB5;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x6709;&#xFF1B; &#x9996;&#x5148;&#xFF0C;&#x6CE8;&#x518C;&#x63D2;&#x4EF6; 1&lt;bean class=&quot;com.baomidou.mybatisplus.plugins.OptimisticLockerInterceptor&quot;&gt;&lt;/bean&gt; &#x5B9E;&#x4F53;&#x7C7B;&#x6DFB;&#x52A0;&#x5BF9;&#x5E94;&#x5C5E;&#x6027;,&#x540C;&#x65F6;&#x6570;&#x636E;&#x5E93;&#x8868;&#x4E5F;&#x8981;&#x6DFB;&#x52A0;&#x5BF9;&#x5E94;&#x5B57;&#x6BB5; 12@Versionprivate Integer version; &#x6D4B;&#x8BD5;&#x5982;&#x4E0B;&#xFF1A; 12345678@Testpublic void testVersion(){ Dept dept = new Dept(); dept.setDeptName(&quot;&#x6D4B;&#x8BD5;&#x90E8;&quot;); dept.setVersion(1); dept.setId(1); dept.updateById();} &#x5982;&#x679C;&#xFF1A;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C06;&#x6570;&#x636E;&#x5E93;version&#x6539;&#x4E3A;2&#xFF0C;&#x5728;&#x6267;&#x884C;&#x66F4;&#x65B0;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x66F4;&#x65B0;&#x8BB0;&#x5F55;&#x6570;&#x4E3A;0&#xFF1B; &#x516B;&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x64CD;&#x4F5C;8.1.&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x5B9E;&#x4F8B;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x64CD;&#x4F5C;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;sql&#x5728;&#x9879;&#x76EE;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x6CE8;&#x5165;&#x5230;&#x5168;&#x5C40;&#x4E2D;&#xFF0C;&#x64CD;&#x4F5C;&#x6B65;&#x9AA4;&#x5982;&#x4E0B;&#xFF1A; &#x5728;Mapper&#x63A5;&#x53E3;&#x4E2D;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6CE8;&#x5165;&#x7684;&#x65B9;&#x6CD5;&#xFF1B; &#x6269;&#x5C55;AutoSqlInjector&#x4E2D;&#x7684;inject&#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;Mapper&#x4E2D;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;&#x8981;&#x6CE8;&#x5165;&#x7684;sql&#xFF1B; &#x6700;&#x540E;&#xFF0C;&#x5728;&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6CE8;&#x5165;&#x5668;&#x5373;&#x53EF;&#xFF1B; &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;mapper&#x4E2D;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5; 1234public interface UserMapper extends BaseMapper&lt;User&gt; { int deleteAll();} &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x91CD;&#x5199;inject&#x65B9;&#x6CD5; 1234567891011121314public class MySqlInjector extends AutoSqlInjector { @Override public void inject(Configuration configuration, MapperBuilderAssistant builderAssistant, Class&lt;?&gt; mapperClass, Class&lt;?&gt; modelClass, TableInfo table) { // &#x6784;&#x9020;sql&#x8BED;&#x53E5; String sql = &quot;delete from &quot; + table.getTableName(); // &#x6784;&#x9020;&#x65B9;&#x6CD5;&#x540D; String method = &quot;deleteAll&quot;; // &#x6784;&#x9020;SqlSource&#x5BF9;&#x8C61; SqlSource sqlSource = languageDriver.createSqlSource(configuration, sql, modelClass); // &#x6784;&#x9020;&#x4E00;&#x4E2A;&#x5220;&#x9664;&#x7684;MapperStatement this.addDeleteMappedStatement(mapperClass,method,sqlSource); }}&#xDF; &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;&#x6CE8;&#x5165;&#x81EA;&#x5B9A;&#x4E49;&#x914D;&#x7F6E; 1234567891011&lt;bean id =&quot;globalConfiguration&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt; &lt;!--&#x6620;&#x5C04;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x5212;&#x7EBF;&#x5B57;&#x6BB5;&#x540D;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x7684;&#x6620;&#x5C04;--&gt; &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x4E3B;&#x952E;&#x7B56;&#x7565; --&gt; &lt;property name=&quot;idType&quot; value=&quot;0&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x8868;&#x524D;&#x7F00;&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt; &lt;property name=&quot;tablePrefix&quot; value=&quot;tbl_&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x64CD;&#x4F5C;--&gt; &lt;property name=&quot;sqlInjector&quot; ref=&quot;mySqlInjector&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;bean class=&quot;com.luo.injector.MySqlInjector&quot; id=&quot;mySqlInjector&quot;&gt;&lt;/bean&gt; &#x6D4B;&#x8BD5; 12345678ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);private UserMapper userMapper = ioc.getBean(&quot;userMapper&quot;,UserMapper.class);@Testpublic void testInject(){ int rs = userMapper.deleteAll();} 8.2.&#x903B;&#x8F91;&#x5220;&#x9664;&#x6240;&#x8C13;&#x903B;&#x8F91;&#x5220;&#x9664;&#xFF0C;&#x5C31;&#x662F;&#x4E0D;&#x771F;&#x6B63;&#x7684;&#x5220;&#x9664;&#x6570;&#x636E;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x800C;&#x662F;&#x53D8;&#x4E3A;&#x65E0;&#x6548;&#x72B6;&#x6001;&#xFF0C;&#x5728;MybatisPlus&#x4E2D;&#xFF0C;&#x7ED9;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;logicSqlInjector &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x6DFB;&#x52A0;&#x903B;&#x8F91;&#x5B57;&#x6BB5; &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x5B9E;&#x4F53;&#x7C7B;&#x6DFB;&#x52A0;&#x5BF9;&#x5E94;&#x5C5E;&#x6027;&#x548C;&#x6CE8;&#x89E3; 12@TableLogicprivate Integer logicFlag; &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;MybatisPlus&#x5168;&#x5C40;&#x914D;&#x7F6E;&#x4E2D;&#x52A0;&#x5165;logicSqlInjector 123456789101112131415&lt;bean id =&quot;globalConfiguration&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt; &lt;!--&#x6620;&#x5C04;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x5212;&#x7EBF;&#x5B57;&#x6BB5;&#x540D;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x7684;&#x6620;&#x5C04;--&gt; &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x4E3B;&#x952E;&#x7B56;&#x7565; --&gt; &lt;property name=&quot;idType&quot; value=&quot;0&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x8868;&#x524D;&#x7F00;&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt; &lt;property name=&quot;tablePrefix&quot; value=&quot;tbl_&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x64CD;&#x4F5C;--&gt; &lt;property ref=&quot;logicSqlInjector&quot; name=&quot;sqlInjector&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x903B;&#x8F91;&#x5220;&#x9664;&#x5168;&#x5C40;&#x503C;--&gt; &lt;property name=&quot;logicDeleteValue&quot; value=&quot;-1&quot;&gt;&lt;/property&gt; &lt;property name=&quot;logicNotDeleteValue&quot; value=&quot;1&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;!--&#x903B;&#x8F91;&#x5220;&#x9664;--&gt;&lt;bean class=&quot;com.baomidou.mybatisplus.mapper.LogicSqlInjector&quot; id=&quot;logicSqlInjector&quot;&gt;&lt;/bean&gt; &#x6D4B;&#x8BD5; 1234@Testpublic void testLogin(){ Integer integer = userMapper.deleteById(1);} &#x8BF4;&#x660E;&#xFF1A;&#x6211;&#x4EEC;&#x505A;&#x7684;&#x662F;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x6267;&#x884C;&#x7684;&#x5374;&#x662F;update&#x64CD;&#x4F5C;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x67E5;&#x8BE2;&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x6DFB;&#x52A0;&#x4E86;&#x6709;&#x6548;&#x5224;&#x65AD; &#x4E5D;&#x3001;&#x516C;&#x5171;&#x5B57;&#x6BB5;&#x586B;&#x5145;&#x8FD9;&#x91CC;&#x6D89;&#x53CA;&#x5230;&#x4E00;&#x4E2A;&#x5143;&#x6570;&#x636E;&#x5904;&#x7406;&#x63A5;&#x53E3;MetaObjectHandler,&#x5143;&#x5BF9;&#x8C61;&#x662F;Mybatis&#x63D0;&#x4F9B;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#xFF0C;&#x66F4;&#x52A0;&#x4F18;&#x96C5;&#x7684;&#x8BBF;&#x95EE;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x7ED9;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x8D4B;&#x503C;&#x7684;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;metaObject&#x83B7;&#x53D6;&#x5BF9;&#x8C61;&#x7684;&#x503C;&#x6216;&#x8005;&#x662F;&#x7ED9;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x8D4B;&#x503C;&#xFF0C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x83B7;&#x53D6;&#x5230;&#x5C5E;&#x6027;&#x5BF9;&#x5E94;&#x65B9;&#x6CD5;&#x7684;Invoker&#xFF1B; 9.1.&#x4F7F;&#x7528;&#x5B9E;&#x4F8B;&#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x6CE8;&#x89E3;&#x9700;&#x8981;&#x586B;&#x5145;&#x7684;&#x5B57;&#x6BB5; 12@TableField(value = &quot;user_name&quot;,fill = FieldFill.INSERT_UPDATE)private String userName; &#x7B2C;&#x4E8C;&#x6B65;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;&#x586B;&#x5145;&#x5904;&#x7406;&#x5668; 12345678910111213141516171819202122232425public class MetaHandler extends MetaObjectHandler { /** * &#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF1A;&#x81EA;&#x52A8;&#x586B;&#x5145; * @param metaObject */ public void insertFill(MetaObject metaObject) { // &#x83B7;&#x53D6;&#x5230;&#x9700;&#x8981;&#x88AB;&#x586B;&#x5145;&#x7684;&#x5B57;&#x6BB5;&#x503C; Object userName = getFieldValByName(&quot;userName&quot;, metaObject); if(userName == null){ setFieldValByName(&quot;userName&quot;,&quot;&#x56DB;&#x5DDD;&#x7801;&#x9171;&quot;,metaObject); } } /** * &#x66F4;&#x65B0;&#x64CD;&#x4F5C;&#xFF1A;&#x81EA;&#x52A8;&#x586B;&#x5145; * @param metaObject */ public void updateFill(MetaObject metaObject) { // &#x83B7;&#x53D6;&#x5230;&#x9700;&#x8981;&#x88AB;&#x586B;&#x5145;&#x7684;&#x5B57;&#x6BB5;&#x503C; Object userName = getFieldValByName(&quot;userName&quot;, metaObject); if(userName == null){ setFieldValByName(&quot;userName&quot;,&quot;&#x5EB7;&#x54E5;&#x54E5;&quot;,metaObject); } }} &#x7B2C;&#x4E09;&#x6B65;&#xFF1A;&#x6CE8;&#x5165;&#x5168;&#x5C40;&#x914D;&#x7F6E; 123456789101112131415161718&lt;bean id =&quot;globalConfiguration&quot; class=&quot;com.baomidou.mybatisplus.entity.GlobalConfiguration&quot;&gt; &lt;!--&#x6620;&#x5C04;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x5212;&#x7EBF;&#x5B57;&#x6BB5;&#x540D;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x9A7C;&#x5CF0;&#x547D;&#x540D;&#x7684;&#x6620;&#x5C04;--&gt; &lt;property name=&quot;dbColumnUnderline&quot; value=&quot;true&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x4E3B;&#x952E;&#x7B56;&#x7565; --&gt; &lt;property name=&quot;idType&quot; value=&quot;0&quot;&gt;&lt;/property&gt; &lt;!-- &#x5168;&#x5C40;&#x7684;&#x8868;&#x524D;&#x7F00;&#x7B56;&#x7565;&#x914D;&#x7F6E; --&gt; &lt;property name=&quot;tablePrefix&quot; value=&quot;tbl_&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x81EA;&#x5B9A;&#x4E49;&#x5168;&#x5C40;&#x64CD;&#x4F5C;--&gt; &lt;!--&lt;property name=&quot;sqlInjector&quot; ref=&quot;mySqlInjector&quot;&gt;&lt;/property&gt;--&gt; &lt;property ref=&quot;logicSqlInjector&quot; name=&quot;sqlInjector&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x903B;&#x8F91;&#x5220;&#x9664;&#x5168;&#x5C40;&#x503C;--&gt; &lt;property name=&quot;logicDeleteValue&quot; value=&quot;-1&quot;&gt;&lt;/property&gt; &lt;property name=&quot;logicNotDeleteValue&quot; value=&quot;1&quot;&gt;&lt;/property&gt; &lt;!--&#x6CE8;&#x5165;&#x516C;&#x5171;&#x5B57;&#x6BB5;&#x586B;&#x5145;&#x5904;&#x7406;&#x5668;--&gt; &lt;property name=&quot;metaObjectHandler&quot; ref=&quot;metaHandler&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;!--&#x81EA;&#x5B9A;&#x4E49;&#x516C;&#x5171;&#x5B57;&#x6BB5;&#x586B;&#x5145;&#x5904;&#x7406;&#x5668;--&gt;&lt;bean class=&quot;com.luo.bandler.MetaHandler&quot; id=&quot;metaHandler&quot;&gt;&lt;/bean&gt; &#x7B2C;&#x56DB;&#x6B65;&#xFF1A;&#x6D4B;&#x8BD5; 1234567@Testpublic void testCom(){ User user = new User(); user.setId(11); user.setLogicFlag(1); user.updateById();} &#x5341;&#x3001;IEDA&#x5F00;&#x53D1;&#x63D2;&#x4EF6;10.1.&#x5B89;&#x88C5;&#x65B9;&#x6CD5;&#x6253;&#x5F00;IDEA&#x8BBE;&#x7F6E;&#x2013;Plugins&#x2013;Browse repositories &#x2013;&#x641C;&#x7D22;mybatisx,&#x5B89;&#x88C5;&#x5373;&#x53EF; 10.2.&#x652F;&#x6301;&#x7684;&#x529F;&#x80FD;&#x6839;&#x636E;mapper&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x81EA;&#x52A8;&#x751F;&#x6210;xml&#x6587;&#x4EF6;&#xFF0C;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x5B9A;&#x4F4D;xml,xml&#x81EA;&#x52A8;&#x5B9A;&#x4F4D;mapper&#x63A5;&#x53E3;&#xFF1B; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win10 Linux子系统 完美搭建]]></title>
    <url>%2F2019%2F03%2F20%2Fwin10-Linux%E5%AD%90%E7%B3%BB%E7%BB%9F-%E5%AE%8C%E7%BE%8E%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[1.Xshell&#x5B8C;&#x7F8E;&#x8FDE;&#x63A5;win10 Linux&#x5B50;&#x7CFB;&#x7EDF; &#x914D;&#x7F6E;SSH&#x670D;&#x52A1;sudo apt-get remove &#x2013;purge openssh-server ## &#x5148;&#x5220;sshsudo apt-get install openssh-server ## &#x5728;&#x5B89;&#x88C5;ssh sudo rm /etc/ssh/ssh_config ## &#x5220;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x8BA9;ssh&#x670D;&#x52A1;&#x81EA;&#x5DF1;&#x60F3;&#x529E;&#x6CD5;&#x94FE;&#x63A5;sudo service ssh &#x2013;full-restart &#x4E0A;&#x9762;&#x547D;&#x4EE4;&#x6267;&#x884C;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x5728;xshell&#x4E2D;&#x8F93;&#x5165;&#x7528;&#x6237;&#x540D;&#x548C;ip&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;xshell&#x767B;&#x5F55;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x7684;Linux&#x3002; &#x914D;&#x7F6E;&#x6C38;&#x4E45;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;xshell&#x767B;&#x5F55;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x7684;Linux&#x3002; 1.&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;sudo nano /etc/sudoers&#x52A0;&#x4E0A;&#x8FD9;&#x53E5;:hins ALL=NOPASSWD: ALLctrl+o &#x4FDD;&#x5B58;ctrl+x &#x9000;&#x51FA; 2.&#x65B0;&#x5EFA;bat&#x547D;&#x4EE4;:bash -c &#x2018;sudo service ssh &#x2013;full-restart&#x2019; 3.Win10&#x8BBE;&#x7F6E;&#x5F00;&#x542F;&#x542F;&#x52A8;shell:startup&#x5C06;&#x65B0;&#x5EFA;&#x7684;bat&#x547D;&#x4EE4;&#x6587;&#x4EF6;&#x4E22;&#x5165;&#x5F00;&#x59CB;&#x6587;&#x4EF6;&#x5939; 2.&#x4FEE;&#x6539;root&#x5BC6;&#x7801;:passwd root 3.linux&#x4E0B;&#x5F00;&#x542F;SSH&#xFF0C;&#x5141;&#x8BB8;root&#x7528;&#x6237;&#x8FDC;&#x7A0B;&#x767B;&#x5F55;1. &#x5141;&#x8BB8;root&#x7528;&#x6237;&#x8FDC;&#x7A0B;&#x767B;&#x5F55;&#x4FEE;&#x6539;ssh&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x6587;&#x4EF6;sudo vi /etc/ssh/sshd_config&#x8C03;&#x6574;PermitRootLogin&#x53C2;&#x6570;&#x503C;&#x4E3A;yes&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; 2. &#x5141;&#x8BB8;&#x65E0;&#x5BC6;&#x7801;&#x767B;&#x5F55;&#x540C;&#x4E0A;&#xFF0C;&#x4FEE;&#x6539;ssh&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;1&#xFF09; &#x5C06;PermitEmptyPasswords yes&#x524D;&#x9762;&#x7684;#&#x53F7;&#x53BB;&#x6389;2&#xFF09; &#x5C06;PermitEmptyPasswords &#x53C2;&#x6570;&#x503C;&#x4FEE;&#x6539;&#x4E3A;yes&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x65E0;&#x8BBA;&#x54EA;&#x79CD;&#xFF0C;&#x6700;&#x540E;PermitEmptyPasswords&#x53C2;&#x6570;&#x503C;&#x4E3A;yes&#x4EE5;&#x4E0A;&#x4E24;&#x79CD;&#x914D;&#x7F6E;&#xFF0C;&#x5747;&#x9700;&#x8981;&#x91CD;&#x542F;ssh&#x670D;&#x52A1;service sshd restart # &#x6216;&#x8005;/etc/initd.d/sshd restart 4.win10 Linux&#x5B50;&#x7CFB;&#x7EDF;&#x5B89;&#x88C5;rz&#x547D;&#x4EE4;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5B89;&#x88C5;: sudo add-apt-repository main sudo add-apt-repository universe sudo add-apt-repository restricted sudo add-apt-repository multiverse sudo apt-get update sudo apt-get install lrzsz 5.&#x5B89;&#x88C5;Jdk&#x5982;&#x679C;Java&#x5F53;&#x524D;&#x672A;&#x5B89;&#x88C5;&#xFF0C;&#x4F60;&#x5C06;&#x770B;&#x5230;&#x4EE5;&#x4E0B;&#x8F93;&#x51FA;&#xFF1A;Command &#x2018;java&#x2019; not found, but can be installed with: apt install default-jreapt install openjdk-11-jre-headlessapt install openjdk-8-jre-headlessapt install openjdk-9-jre-headless &#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6765;&#x5B89;&#x88C5;OpenJDK&#xFF1A;sudo apt install default-jre &#x8BE5;&#x547D;&#x4EE4;&#x5C06;&#x5B89;&#x88C5;Java&#x8FD0;&#x884C;&#x65F6;&#x73AF;&#x5883;&#xFF08;JRE&#xFF09;&#x3002;&#x8FD9;&#x5C06;&#x5141;&#x8BB8;&#x4F60;&#x8FD0;&#x884C;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;Java&#x8F6F;&#x4EF6;&#x3002;&#x9A8C;&#x8BC1;&#x5B89;&#x88C5;&#xFF1A;java -version document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>部署</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
